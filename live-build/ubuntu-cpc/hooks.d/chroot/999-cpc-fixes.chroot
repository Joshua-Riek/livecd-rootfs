#!/bin/bash -x
rootd="${1:-/}"
root_fs_label=cloudimg-rootfs
set -ex

. /root/config/chroot

CLOUD_IMG_STR="# CLOUD_IMG: This file was created/modified by the Cloud Image build process"

LANG=C

_xchroot() {
   # Prevent multiple chroots
   if [ "$1" = "/" ]; then
      shift;
      "$@"
   else
      chroot "$@"
   fi
}

#### COMMON architecture independent functions
arch=$(_xchroot "${rootd}" dpkg --print-architecture)

## --------------
# remove 127.0.1.1 entry (LP: #440757)
_xchroot "${rootd}" sh -c 'sed -i "/^127.0.1.1/d" /etc/hosts'

## --------------
# remove ssh pregenerated keys (LP: #512377)

_xchroot "${rootd}" sh -c 'rm -f /etc/ssh/ssh_host_[rd]sa_key*'

## --------------
if [ "${SUBPROJECT:-}" != minimized ]; then
	_xchroot "${rootd}" locale-gen en_US.utf8
fi

## --------------
# We continue to pre-generate en_US.UTF-8 locale above, but the default locale
# should be C.UTF-8 for 17.10 and later.  For earlier releases, cloud-init may
# override this.
echo LANG="C.UTF-8" > "${rootd}/etc/default/locale"

## --------------
# set cloud-init to be on
values="NoCloud, ConfigDrive, AltCloud, OVF, MAAS, Ec2, None"
printf "%s\t%s\t%s\t%s\n" \
   cloud-init cloud-init/datasources multiselect  "$values" |
      _xchroot "${rootd}" debconf-set-selections
_xchroot "${rootd}" dpkg-reconfigure --frontend=noninteractive cloud-init

## --------------
# write some build information to the guest
# the idea is that given runtime info and this info, the instance
# can at least determine if there is a newer build available
# these variables are passed in in environment from cloudimg-build-launcher
if [ -n "${build_name}" -o -n "${serial}" ]; then
   d="${rootd}/etc/cloud"
   [ -d "$d" ] || mkdir -p "${d}"
   {
      [ -n "${build_name}" ] && echo "build_name: ${build_name}"
      [ -n "${serial}" ] && echo "serial: ${serial}"
   } > "$d/build.info"
fi

## --------------
# for maverick and newer, use LABEL= for the '/' entry in fstab
if [ -n "${root_fs_label}" ]; then
   bl="[:blank:]"
   lstr="LABEL=${root_fs_label}"
   sed -i "s,^[^#${bl}]*\([${bl}]*/[${bl}].*\),${lstr}\1," "${rootd}/etc/fstab"
fi
cat > /etc/fstab << EOM
LABEL=cloudimg-rootfs	/	 ext4	discard,errors=remount-ro	0 1
EOM

# for quantal and newer, add /etc/overlayroot.local.conf
# but do not overwrite anything that somehow got there
if [ -f "${rootd}/etc/overlayroot.conf" ] &&
   [ ! -f "${rootd}/etc/overlayroot.local.conf" ]; then
   {
      echo "${CLOUD_IMG_STR}"
      echo "overlayroot_cfgdisk=LABEL=OROOTCFG"
   } > "${rootd}/etc/overlayroot.local.conf"
fi

# previous steps may have left a dangling symlink here with
# SUBPROJECT=minimized and that breaks lb_chroot_hacks step
if [ -L "${rootd}/boot/initrd.img" ] && [ ! -e "${rootd}/boot/initrd.img" ]; then
	rm "${rootd}/boot/initrd.img"
fi

# Recommends of ubuntu-server that should not be included in cloud images by
# default
# unfortunately because we are currently installing ubuntu-server as a task,
# all of the recursive dependencies are marked as manually installed and are
# not subject to autoremoval.  There is discussion of us stopping the use of
# tasks in livecd-rootfs but in the meantime, we have to also explicitly
# remove the packages providing the services
_xchroot "$rootd" env DEBIAN_FRONTEND=noninteractive \
	apt-get -y autoremove --purge fwupd modemmanager udisks2

if [ "${SUBPROJECT:-}" = minimized ]; then
	# Remove various packages that we don't want in the minimized images.
	# Some of these are tools that don't make sense by default
	# non-interactively; some are libraries whose reverse-dependencies
	# will have already been removed; open-vm-tools, it's a bug that this
	# is in the common cloud seed because this should only be included
	# in VMWare guest images, and we know none of the minimized images
	# are targeted at VMWare.
	_xchroot "${rootd}" env DEBIAN_FRONTEND=noninteractive \
		apt-mark auto '^lib.*' '^python*' vim-runtime 2>/dev/null
	# FIXME: iso-codes is a dep of software-properties and shouldn't be
	_xchroot "${rootd}" env DEBIAN_FRONTEND=noninteractive \
		apt-get -y autoremove --purge iso-codes xauth pastebinit \
		plymouth open-vm-tools git git-man shared-mime-info vim vim-common \
		console-setup ncurses-term tmux screen policykit-1 \
		xdg-user-dirs less publicsuffix run-one apport-symptoms \
		ubuntu-cloudimage-keyring file

	_xchroot "${rootd}" apt clean
fi

#### END COMMON ARCH FUNCTIONS


case $arch in
	# ARM, ppc, riscv64 and s390x images are special
	powerpc|ppc64el|s390x|riscv64)
		exit 0
		;;
esac

# vi: ts=3 expandtab
